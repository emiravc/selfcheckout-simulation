import java.math.BigDecimal;
import java.util.ArrayList;

import javax.swing.DefaultListModel;
import javax.swing.JLabel;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;

import org.lsmr.selfcheckout.Barcode;
import org.lsmr.selfcheckout.Numeral;
import org.lsmr.selfcheckout.external.ProductDatabases;
import org.lsmr.selfcheckout.products.BarcodedProduct;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author bunny
 */
public class MainFrame extends javax.swing.JFrame
{


    DefaultListModel model;
    ArrayList <BarcodedProduct> products;
    /**
     * Creates new form MainFrame
     */
    public MainFrame ()
    {
        initComponents ();
        populateDatabase();
        model = new DefaultListModel();

        //productsList.addListSelectionListener(
        //        new SharedListSelectionHandler())
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents()
    {

        searchBar = new javax.swing.JTextField();
        searchBarLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        searchList = new javax.swing.JList<>();
        pluBarLabel = new javax.swing.JLabel();
        pluBar = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        searchBar.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                searchBarActionPerformed(evt);
            }
        });

        searchBarLabel.setText("Search For Product..");

        jScrollPane1.setViewportView(searchList);

        pluBarLabel.setText("Enter PLU Code");

        pluBar.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jTextField1ActionPerformed(evt);
            }
        });

        searchBar.getDocument().addDocumentListener(new DocumentListener() {
            public void changedUpdate(DocumentEvent e) {

                getText();
            }
            public void removeUpdate(DocumentEvent e) {
                getText();
            }
            public void insertUpdate(DocumentEvent e) {
                getText();
            }

            public void getText() {
                model.removeAllElements();

                System.out.println("inside get text");
                String noResults = "No results";
                String input = searchBar.getText();

                if (input.length()>0){
                    //JOptionPane.showMessageDialog(null,
                    // "Error: Please enter number bigger than 0", "Error Massage",
                    //JOptionPane.ERROR_MESSAGE);


                    products = searchByName(input);
                    if (products.size() > 0)
                        model.removeElement(noResults);
                    else
                    {
                        model.addElement(noResults);
                    }

                    for (int i = 0; i < products.size(); i++)
                    {
                        //DefaultListModel model = (DefaultListModel) productsList.getModel();
                        model.addElement(products.get(i).getDescription());
                        //System.out.println("Added " + products.get(i).getDescription());
                    }

                }

                searchList.setModel(model);
            }
        });

        searchList.addListSelectionListener(new ListSelectionListener() {

            @Override
            public void valueChanged (ListSelectionEvent e)
            {
                // TODO Auto-generated method stub
                BarcodedProduct selected = products.get(searchList.getSelectedIndex());
                System.out.println("selected: " + selected.getDescription());
                //Add to cart here
            }
        });
        
        jScrollPane2.setViewportView(jList1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addGroup(layout.createSequentialGroup()
                                                .addGap(12, 12, 12)
                                                .addComponent(searchBarLabel))
                                        .addGroup(layout.createSequentialGroup()
                                                .addContainerGap()
                                                .addComponent(searchBar, javax.swing.GroupLayout.DEFAULT_SIZE, 121, Short.MAX_VALUE))
                                        .addGroup(layout.createSequentialGroup()
                                                .addContainerGap()
                                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 130, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(pluBarLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                .addComponent(pluBar, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 74, Short.MAX_VALUE)
                                                .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
                                .addGap(53, 53, 53))
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(searchBarLabel)
                                        .addComponent(pluBarLabel))
                                .addGap(2, 2, 2)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(searchBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(pluBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addContainerGap(107, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>

    private void searchBarActionPerformed(java.awt.event.ActionEvent evt)
    {
        //System.out.println("Hi");
    }

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt)
    {
        // TODO add your handling code here:
    }

    /**
     * @param args the command line arguments
     */
    public static void main (String args[])
    {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try
        {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels ())
            {
                if ("Nimbus".equals (info.getName ()))
                {
                    javax.swing.UIManager.setLookAndFeel (info.getClassName ());
                    break;
                }
            }
        }
        catch (ClassNotFoundException ex)
        {
            java.util.logging.Logger.getLogger (MainFrame.class.getName ()).log (java.util.logging.Level.SEVERE, null, ex);
        }
        catch (InstantiationException ex)
        {
            java.util.logging.Logger.getLogger (MainFrame.class.getName ()).log (java.util.logging.Level.SEVERE, null, ex);
        }
        catch (IllegalAccessException ex)
        {
            java.util.logging.Logger.getLogger (MainFrame.class.getName ()).log (java.util.logging.Level.SEVERE, null, ex);
        }
        catch (javax.swing.UnsupportedLookAndFeelException ex)
        {
            java.util.logging.Logger.getLogger (MainFrame.class.getName ()).log (java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater (new Runnable ()
        {
            public void run ()
            {
                new MainFrame ().setVisible (true);
            }
        });
    }

    // Variables declaration - do not modify
    private javax.swing.JLabel pluBarLabel;
    private javax.swing.JList<String> jList1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField pluBar;
    private javax.swing.JList<String> searchList;
    private javax.swing.JTextField searchBar;
    private javax.swing.JLabel searchBarLabel;
    // End of variables declaration

    public ArrayList <BarcodedProduct> searchByName(String userInput)
    {
        ArrayList <BarcodedProduct> products = new ArrayList<BarcodedProduct>();

        for (BarcodedProduct value : ProductDatabases.BARCODED_PRODUCT_DATABASE.values())
        {
            String productString = value.getDescription();
            if (productString.contains(userInput))
            {
                products.add(value);
                System.out.println(value.getDescription());
            }
        }
        return products;
    }

    public void populateDatabase()
    {
        Numeral[] n = {Numeral.one, Numeral.two, Numeral.three, Numeral.four, Numeral.five, Numeral.six, Numeral.seven, Numeral.eight, Numeral.nine};
        for(int i = 1; i < 10; i++) {
            Numeral [] numerals = {n[i-1]};
            Barcode barcode = new Barcode (numerals);
            ProductDatabases.BARCODED_PRODUCT_DATABASE.put(barcode, new BarcodedProduct(barcode, ("item"+i), new BigDecimal(i*10), i*100));
        }
    }


}
