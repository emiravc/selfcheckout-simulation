import java.awt.Dimension;
import java.awt.event.FocusEvent;
import java.awt.event.FocusListener;
import java.math.BigDecimal;
import java.util.ArrayList;

import javax.swing.DefaultListModel;
import javax.swing.JLabel;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;

import org.lsmr.selfcheckout.Barcode;
import org.lsmr.selfcheckout.Numeral;
import org.lsmr.selfcheckout.PriceLookupCode;
import org.lsmr.selfcheckout.external.ProductDatabases;
import org.lsmr.selfcheckout.products.BarcodedProduct;
import org.lsmr.selfcheckout.products.PLUCodedProduct;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author bunny
 */
public class SearchProductsGUI extends javax.swing.JFrame
    {
    
    private int lastClicked = -1;
    private String searchString = "";
    private String pluString    = "";
    
    DefaultListModel model_plu;
    DefaultListModel model_search;
    LookupNoBarcode x2;
    
    ArrayList <BarcodedProduct> barcoded_products;
    ArrayList <PLUCodedProduct> plu_products_search;
    ArrayList <PLUCodedProduct> plu_products;
    Data p2 = Data.getInstance();
    
    /**
     * Creates new form MainFrame
     */
    public SearchProductsGUI ()
        {
        initComponents ();
        populateBarcodeDatabase();
        populatePluDatabase(); 
        
        model_search = new DefaultListModel();
        model_plu    = new DefaultListModel();
        x2           = new LookupNoBarcode();
        }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents()
    {

        searchBar = new javax.swing.JTextField();
        searchBarLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        searchList = new javax.swing.JList<>();
        pluBarLabel = new javax.swing.JLabel();
        pluBar = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        pluList = new javax.swing.JList<>();
        q = new javax.swing.JButton();
        w = new javax.swing.JButton();
        e = new javax.swing.JButton();
        r = new javax.swing.JButton();
        t = new javax.swing.JButton();
        y = new javax.swing.JButton();
        u = new javax.swing.JButton();
        i = new javax.swing.JButton();
        o = new javax.swing.JButton();
        p = new javax.swing.JButton();
        a = new javax.swing.JButton();
        s = new javax.swing.JButton();
        f = new javax.swing.JButton();
        d = new javax.swing.JButton();
        g = new javax.swing.JButton();
        j = new javax.swing.JButton();
        k = new javax.swing.JButton();
        l = new javax.swing.JButton();
        z = new javax.swing.JButton();
        x = new javax.swing.JButton();
        h = new javax.swing.JButton();
        c = new javax.swing.JButton();
        v = new javax.swing.JButton();
        n = new javax.swing.JButton();
        m = new javax.swing.JButton();
        b = new javax.swing.JButton();
        key1 = new javax.swing.JButton();
        key3 = new javax.swing.JButton();
        key4 = new javax.swing.JButton();
        key2 = new javax.swing.JButton();
        key6 = new javax.swing.JButton();
        key5 = new javax.swing.JButton();
        key8 = new javax.swing.JButton();
        key9 = new javax.swing.JButton();
        key7 = new javax.swing.JButton();
        delete = new javax.swing.JButton();
        key0 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        searchBar.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                searchBarActionPerformed(evt);
            }
        });

        searchBarLabel.setText("Search For Product..");

        jScrollPane1.setViewportView(searchList);

        pluBarLabel.setText("Enter PLU Code");

        pluBar.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
            pluBarActionPerformed(evt);
            }
        });

        jScrollPane2.setViewportView(pluList);

        q.setText("Q");
        
        q.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                qActionPerformed(evt);
            }
        });

        w.setText("W");
        w.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                wActionPerformed(evt);
            }
        });

        e.setText("E");
        e.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                eActionPerformed(evt);
            }
        });

        r.setText("R");
        r.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                rActionPerformed(evt);
            }
        });

        t.setText("T");
        t.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                tActionPerformed(evt);
            }
        });

        y.setText("Y");
        y.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                yActionPerformed(evt);
            }
        });

        u.setText("U");

        i.setText("I");
        i.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                iActionPerformed(evt);
            }
        });

        o.setText("O");
        o.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                oActionPerformed(evt);
            }
        });

        p.setText("P");
        p.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                pActionPerformed(evt);
            }
        });

        a.setText("A");
        a.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                aActionPerformed(evt);
            }
        });
        

        s.setText("S");
        s.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                sActionPerformed(evt);
            }
        });

        f.setText("F");
        f.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                fActionPerformed(evt);
            }
        });

        d.setText("D");
        d.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                dActionPerformed(evt);
            }
        });

        g.setText("G");
        g.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                gActionPerformed(evt);
            }
        });

        j.setText("J");
        j.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jActionPerformed(evt);
            }
        });

        k.setText("K");
        k.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                kActionPerformed(evt);
            }
        });

        l.setText("L");
        l.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                lActionPerformed(evt);
            }
        });

        z.setText("Z");
        z.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                zActionPerformed(evt);
            }
        });

        x.setText("X");
        x.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                xActionPerformed(evt);
            }
        });

        h.setText("H");
        h.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                hActionPerformed(evt);
            }
        });

        c.setText("C");
        c.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                cActionPerformed(evt);
            }
        });

        v.setText("V");
        v.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                vActionPerformed(evt);
            }
        });

        n.setText("N");
        n.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                nActionPerformed(evt);
            }
        });

        m.setText("M");
        m.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                mActionPerformed(evt);
            }
        });

        b.setText("B");
        b.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                bActionPerformed(evt);
            }
        });

        key1.setText("1");
        key1.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                key1ActionPerformed(evt);
            }
        });

        key3.setText("3");
        key3.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                key3ActionPerformed(evt);
            }
        });

        key4.setText("4");
        key4.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                key4ActionPerformed(evt);
            }
        });

        key2.setText("2");
        key2.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                key2ActionPerformed(evt);
            }
        });

        key6.setText("6");
        key6.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                key6ActionPerformed(evt);
            }
        });

        key5.setText("5");
        key5.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                key5ActionPerformed(evt);
            }
        });

        key8.setText("8");
        key8.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                key8ActionPerformed(evt);
            }
        });

        key9.setText("9");
        key9.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                key9ActionPerformed(evt);
            }
        });

        key7.setText("7");
        key7.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                key7ActionPerformed(evt);
            }
        });

        delete.setText("DELETE");
        delete.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                deleteActionPerformed(evt);
            }
        });

        key0.setText("0");
        key0.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                key0ActionPerformed(evt);
            }
        });
        
        
        pluBar.addFocusListener(new FocusListener() {

        @Override
        public void focusGained(FocusEvent e) {
            lastClicked = 1;
        }

        @Override
        public void focusLost(FocusEvent e) {
        //lastClicked = -1;
        }
    });
    
        searchBar.addFocusListener(new FocusListener() {

        @Override
        public void focusGained(FocusEvent e) {
            lastClicked = 0;
        }

        @Override
        public void focusLost(FocusEvent e) {
        //lastClicked = -1;
        }
    });
        
        
        searchBar.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                searchBarActionPerformed(evt);
            }
        });

        searchBarLabel.setText("Search For Product..");

        jScrollPane1.setViewportView(searchList);

        pluBarLabel.setText("Enter PLU Code");

        pluBar.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                pluBarActionPerformed(evt);
            }
        });
        
        
        
        searchBar.getDocument().addDocumentListener(new DocumentListener() {
        public void changedUpdate(DocumentEvent e) {
        
        getText();
        }
        public void removeUpdate(DocumentEvent e) {
        getText();
        }
        public void insertUpdate(DocumentEvent e) {
        getText();
        }

        public void getText() {
        model_search.removeAllElements();
        
        System.out.println("inside get text");
        String noResults = "No results";
           String input = searchBar.getText();
           
           if (input.length()>0){
             //JOptionPane.showMessageDialog(null,
               // "Error: Please enter number bigger than 0", "Error Massage",
                //JOptionPane.ERROR_MESSAGE);
           
           
           barcoded_products = x2.searchByNameBarcode(input); 
           if (barcoded_products.size() > 0)
               model_search.removeElement(noResults);
           else
               {
               model_search.addElement(noResults); 
               }
           
           for (int i = 0; i < barcoded_products.size(); i++)
               {
               //DefaultListModel model = (DefaultListModel) productsList.getModel();
               //System.out.println("Added " + products.get(i).getDescription());
               
               BarcodedProduct product = barcoded_products.get(i);
               if (product.isPerUnit())
                   model_search.addElement(barcoded_products.get(i).getDescription() +  "  $"  + barcoded_products.get(i).getPrice());
               else
                   model_search.addElement(barcoded_products.get(i).getDescription() +  "  $"  + barcoded_products.get(i).getPrice() + "/kg");
               
               }
           
           plu_products_search = x2.searchByNamePlu(input); 
           if (plu_products_search.size() > 0)
               model_search.removeElement(noResults);
           else
               {
               model_search.addElement(noResults); 
               }
           
           for (int i = 0; i < plu_products_search.size(); i++)
               {
               //DefaultListModel model = (DefaultListModel) productsList.getModel();
               //System.out.println("Added " + products.get(i).getDescription());
               PLUCodedProduct product = plu_products_search.get(i);
               if (product.isPerUnit())
                   model_search.addElement(plu_products_search.get(i).getDescription() +  "  $"  + plu_products_search.get(i).getPrice());
               else
                   model_search.addElement(plu_products_search.get(i).getDescription() +  "  $"  + plu_products_search.get(i).getPrice() + "/kg");
               }
           
           }

           searchList.setModel(model_search);
        }
      });
        
        
        pluBar.getDocument().addDocumentListener(new DocumentListener() {
        public void changedUpdate(DocumentEvent e) {
        
        getText();
        }
        public void removeUpdate(DocumentEvent e) {
        getText();
        }
        public void insertUpdate(DocumentEvent e) {
        getText();
        }

        public void getText() {
        model_plu.removeAllElements();
        
        //System.out.println("inside get text");
        String noResults = "No results";
           String input = pluBar.getText();
           
           if (input.length()>=4 && input.length() <= 5){
             //JOptionPane.showMessageDialog(null,
               // "Error: Please enter number bigger than 0", "Error Massage",
                //JOptionPane.ERROR_MESSAGE);
           
           plu_products = x2.searchByPlu(input); 
           if (plu_products.size() > 0)
               model_plu.removeElement(noResults);
           else
               {
               model_plu.addElement(noResults); 
               }
           
           for (int i = 0; i < plu_products.size(); i++)
               {
               //DefaultListModel model = (DefaultListModel) productsList.getModel();
               
               PLUCodedProduct product = plu_products.get(i);
               if (product.isPerUnit())
                   model_plu.addElement(plu_products.get(i).getDescription() +  "  $"  + plu_products.get(i).getPrice());
               else
                   model_plu.addElement(plu_products.get(i).getDescription() +  "  $"  + plu_products.get(i).getPrice() + "/kg");
               
            
               
               //System.out.println("Added " + products.get(i).getDescription());
               }
           
           }

           pluList.setModel(model_plu);
        }
      });
        
        
        searchList.addListSelectionListener(new ListSelectionListener() {

        @Override
        public void valueChanged (ListSelectionEvent e)
            {
            int selectedIndex = searchList.getSelectedIndex();
            //System.out.println("in value changed, selected index is: " + selectedIndex);
            if (!searchList.getValueIsAdjusting())
                {
                if (selectedIndex < 0)
                    return;
                // TODO Auto-generated method stub
                
                if (selectedIndex > (barcoded_products.size() - 1))
                    {
                    selectedIndex -= barcoded_products.size();
                    PLUCodedProduct selected = plu_products_search.get(selectedIndex);
                    ArrayList <PLUCodedProduct> scannedItems = p2.getPluScanned();
                    scannedItems.add(selected);
                    
                    p2.set_plu_product_scanned(true);
                    
                    
                     //for (int i = 0; i < scannedItems.size(); i++)
                      // System.out.println("barcoded items: " + scannedItems.get(i).getDescription());
                    }
                else
                    {
                    BarcodedProduct selected = barcoded_products.get(selectedIndex);
                    //System.out.println("selected: " + selected.getDescription());
                    //ADD TO ITEMS SCANNED
                  
                    ArrayList <BarcodedProduct> scannedItems = p2.getBarcodeScanned();
                    scannedItems.add(selected);
                    p2.set_plu_product_scanned(false);
                    
                    //for (int i = 0; i < scannedItems.size(); i++)
                        //System.out.println("PLU coded items: " + scannedItems.get(i).getDescription());
                    }
                
               // for (int i = 0; i < scannedItems.size(); i++)
                 //   System.out.println("scanned items array: " + scannedItems.get(i).getDescription());
                }
            }
        });
        
        
        
        pluList.addListSelectionListener(new ListSelectionListener() {

        @Override
        public void valueChanged (ListSelectionEvent e)
            {
            int selectedIndex = pluList.getSelectedIndex();
            //System.out.println("in value changed, selected index is: " + selectedIndex);
            if (!pluList.getValueIsAdjusting())
                {
                if (selectedIndex < 0)
                    return;
                // TODO Auto-generated method stub
                PLUCodedProduct selected = plu_products.get(selectedIndex);
                //System.out.println("selected: " + selected.getDescription());
                //ADD TO ITEMS SCANNED
                
                JLabel label = new JLabel("Added " + selected.getDescription() + " to cart");
                Dimension size = label.getPreferredSize();
                label.setBounds(400, 400, size.width, size.height);
               
                ArrayList <PLUCodedProduct> scannedPluItems = p2.getPluScanned();
                scannedPluItems.add(selected);
                
                p2.set_plu_product_scanned(true);
                
                //for (int i = 0; i < scannedPluItems.size(); i++)
                    //System.out.println("scanned items array: " + scannedPluItems.get(i).getDescription());
                }
            }
        });
        
        

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(searchBarLabel))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(searchBar, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(65, 65, 65))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(pluBar, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(53, 53, 53)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(pluBarLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(51, 51, 51))))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(q, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(w, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(e, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(r, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(a, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(s, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(d, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(f, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(t, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(y, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(b, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(n, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(g, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(h, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(m, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(j, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(u, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(i, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(o, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(p, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(k, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(l, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addContainerGap(68, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(key4, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(key7, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(key8, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(key9, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(key0, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(key5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                .addComponent(key1, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(key2, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(key3, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(key6, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(z, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(x, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(c, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(v, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE))))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addContainerGap(533, Short.MAX_VALUE)
                    .addComponent(delete, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(15, 15, 15)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(searchBarLabel)
                    .addComponent(pluBarLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(searchBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pluBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(56, 56, 56)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(q)
                    .addComponent(w)
                    .addComponent(e)
                    .addComponent(r)
                    .addComponent(t)
                    .addComponent(y)
                    .addComponent(u)
                    .addComponent(i)
                    .addComponent(o)
                    .addComponent(p))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(a)
                    .addComponent(s)
                    .addComponent(f)
                    .addComponent(d)
                    .addComponent(g)
                    .addComponent(j)
                    .addComponent(k)
                    .addComponent(l)
                    .addComponent(h))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(z)
                    .addComponent(x)
                    .addComponent(c)
                    .addComponent(v)
                    .addComponent(n)
                    .addComponent(m)
                    .addComponent(b))
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(key1)
                    .addComponent(key3)
                    .addComponent(key2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(key4)
                    .addComponent(key6)
                    .addComponent(key5))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(key7)
                    .addComponent(key8)
                    .addComponent(key9))
                .addGap(18, 18, 18)
                .addComponent(key0)
                .addContainerGap(96, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addContainerGap(377, Short.MAX_VALUE)
                    .addComponent(delete)
                    .addGap(213, 213, 213)))
        );

        pack();
    }// </editor-fold>                        

    private void searchBarActionPerformed(java.awt.event.ActionEvent evt)                                          
    {                                              
        System.out.println("Hi");
    }                                         

    private void pluBarActionPerformed(java.awt.event.ActionEvent evt)                                            
    {                                                
        // TODO add your handling code here:
    }                                           

    private void wActionPerformed(java.awt.event.ActionEvent evt)                                  
    {                                      
        // TODO add your handling code here:
    addText("W");
    } 
    
    private void aActionPerformed(java.awt.event.ActionEvent evt)                                  
    {                                      
        // TODO add your handling code here:
    addText("A");
    }  

    private void rActionPerformed(java.awt.event.ActionEvent evt)                                  
    {                                      
        // TODO add your handling code here:
    addText("R");
    }                                 

    private void tActionPerformed(java.awt.event.ActionEvent evt)                                  
    {                                      
        // TODO add your handling code here:
    addText("T");
    }                                 

    private void iActionPerformed(java.awt.event.ActionEvent evt)                                  
    {                                      
        // TODO add your handling code here:
    addText("I");
    }                                 

    private void oActionPerformed(java.awt.event.ActionEvent evt)                                  
    {                                      
        // TODO add your handling code here:
    addText("O");
    }                                 

    private void pActionPerformed(java.awt.event.ActionEvent evt)                                  
    {                                      
        // TODO add your handling code here:
    addText("P");
    }                                 

    private void sActionPerformed(java.awt.event.ActionEvent evt)                                  
    {                                      
        // TODO add your handling code here:
    addText("S");
    }                                 

    private void fActionPerformed(java.awt.event.ActionEvent evt)                                  
    {                                      
        // TODO add your handling code here:
    addText("F");
    }                                 

    private void dActionPerformed(java.awt.event.ActionEvent evt)                                  
    {                                      
        // TODO add your handling code here:
    addText("D");
    }                                 

    private void gActionPerformed(java.awt.event.ActionEvent evt)                                  
    {                                      
        // TODO add your handling code here:
    addText("G");
    }                                 

    private void jActionPerformed(java.awt.event.ActionEvent evt)                                  
    {                                      
        // TODO add your handling code here:
    addText("J");
    }                                 

    private void kActionPerformed(java.awt.event.ActionEvent evt)                                  
    {                                      
        // TODO add your handling code here:
    addText("K");
    }                                 

    private void lActionPerformed(java.awt.event.ActionEvent evt)                                  
    {                                      
        // TODO add your handling code here:
    addText("L");
    }                                 

    private void zActionPerformed(java.awt.event.ActionEvent evt)                                  
    {                                      
        // TODO add your handling code here:
    addText("Z");
    }                                 

    private void xActionPerformed(java.awt.event.ActionEvent evt)                                  
    {                                      
        // TODO add your handling code here:
    addText("X");
    }                                 

    private void hActionPerformed(java.awt.event.ActionEvent evt)                                  
    {                                      
        // TODO add your handling code here:
    addText("H");
    }                                 

    private void cActionPerformed(java.awt.event.ActionEvent evt)                                  
    {                                      
        // TODO add your handling code here:
    addText("C");
    } 
    

    private void qActionPerformed(java.awt.event.ActionEvent evt)                                  
    {                                      
        // TODO add your handling code here:
    addText("Q");
    }   

    private void vActionPerformed(java.awt.event.ActionEvent evt)                                  
    {                                      
        // TODO add your handling code here:
    addText("V");
    }                                 

    private void nActionPerformed(java.awt.event.ActionEvent evt)                                  
    {                                      
        // TODO add your handling code here:
    addText("N");
    }                                 

    private void mActionPerformed(java.awt.event.ActionEvent evt)                                  
    {                                      
        // TODO add your handling code here:
    addText("M");
    }                                 

    private void bActionPerformed(java.awt.event.ActionEvent evt)                                  
    {                                      
        // TODO add your handling code here:
    addText("B");
    }                                 

    private void key1ActionPerformed(java.awt.event.ActionEvent evt)                                     
    {                                         
        // TODO add your handling code here:
    addText("1");
    }                                    

    private void key3ActionPerformed(java.awt.event.ActionEvent evt)                                     
    {                                         
        // TODO add your handling code here:
    addText("3");
    }                                    

    private void key4ActionPerformed(java.awt.event.ActionEvent evt)                                     
    {                                         
        // TODO add your handling code here:
    addText("4");
    }                                    

    private void key2ActionPerformed(java.awt.event.ActionEvent evt)                                     
    {                                         
        // TODO add your handling code here:
    addText("2");
    }                                    

    private void key6ActionPerformed(java.awt.event.ActionEvent evt)                                     
    {                                         
        // TODO add your handling code here:
    addText("6");
    }                                    

    private void key5ActionPerformed(java.awt.event.ActionEvent evt)                                     
    {                                         
        // TODO add your handling code here:
    addText("5");
    }                                    

    private void key8ActionPerformed(java.awt.event.ActionEvent evt)                                     
    {                                         
        // TODO add your handling code here:
    addText("8");
    }                                    

    private void key9ActionPerformed(java.awt.event.ActionEvent evt)                                     
    {                                         
        // TODO add your handling code here:
    addText("9");
    }                                    

    private void key7ActionPerformed(java.awt.event.ActionEvent evt)                                     
    {                                         
        // TODO add your handling code here:
    addText("7");
    }                                    

    private void deleteActionPerformed(java.awt.event.ActionEvent evt)                                       
    {                                           
    if (lastClicked != -1)
        {
        if (lastClicked == 0 && searchString.length() > 0)
            {
            searchString = searchString.substring(0, searchString.length() - 1);
            
            System.out.println("searchString: " + searchString);
            searchBar.setText(searchString);
            }
            
        else if (lastClicked == 1 && pluString.length() > 0)
            {
            pluString = pluString.substring(0, pluString.length() - 1);
            pluBar.setText(pluString);
            }
        }
    }                                      

    private void key0ActionPerformed(java.awt.event.ActionEvent evt)                                     
    {                                         
        // TODO add your handling code here:
    addText("0");
    }                                    

    private void eActionPerformed(java.awt.event.ActionEvent evt)                                  
    {                                      
        // TODO add your handling code here:
    addText("E");
    }                                 

    private void yActionPerformed(java.awt.event.ActionEvent evt)                                  
    {                                      
        // TODO add your handling code here:
    addText("Y");
    }                                 

    
    public void addText(String input_key)
    {
    if (lastClicked != -1)
        {
        if (lastClicked == 0)
            {
            searchString += input_key;
            searchBar.setText(searchString);
            }
            
        else if (lastClicked == 1)
            {
            pluString += input_key;
            pluBar.setText(pluString);
            }
        }
    }
    
    
    /**
     * @param args the command line arguments
     */
    public static void main (String args[])
        {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try
            {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels ())
                {
                if ("Nimbus".equals (info.getName ()))
                    {
                    javax.swing.UIManager.setLookAndFeel (info.getClassName ());
                    break;
                    }
                }
            }
        catch (ClassNotFoundException ex)
            {
            java.util.logging.Logger.getLogger (MainFrame.class.getName ()).log (java.util.logging.Level.SEVERE, null, ex);
            }
        catch (InstantiationException ex)
            {
            java.util.logging.Logger.getLogger (MainFrame.class.getName ()).log (java.util.logging.Level.SEVERE, null, ex);
            }
        catch (IllegalAccessException ex)
            {
            java.util.logging.Logger.getLogger (MainFrame.class.getName ()).log (java.util.logging.Level.SEVERE, null, ex);
            }
        catch (javax.swing.UnsupportedLookAndFeelException ex)
            {
            java.util.logging.Logger.getLogger (MainFrame.class.getName ()).log (java.util.logging.Level.SEVERE, null, ex);
            }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater (new Runnable ()
            {
            public void run ()
                {
                new MainFrame ().setVisible (true);
                }
            });
        }

    // Variables declaration - do not modify                     
    private javax.swing.JButton a;
    private javax.swing.JButton b;
    private javax.swing.JButton c;
    private javax.swing.JButton d;
    private javax.swing.JButton delete;
    private javax.swing.JButton e;
    private javax.swing.JButton f;
    private javax.swing.JButton g;
    private javax.swing.JButton h;
    private javax.swing.JButton i;
    private javax.swing.JButton j;
    private javax.swing.JLabel pluBarLabel;
    private javax.swing.JList<String> pluList;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField pluBar;
    private javax.swing.JButton k;
    private javax.swing.JButton key0;
    private javax.swing.JButton key1;
    private javax.swing.JButton key2;
    private javax.swing.JButton key3;
    private javax.swing.JButton key4;
    private javax.swing.JButton key5;
    private javax.swing.JButton key6;
    private javax.swing.JButton key7;
    private javax.swing.JButton key8;
    private javax.swing.JButton key9;
    private javax.swing.JButton l;
    private javax.swing.JButton m;
    private javax.swing.JButton n;
    private javax.swing.JButton o;
    private javax.swing.JButton p;
    private javax.swing.JList<String> searchList;
    private javax.swing.JButton q;
    private javax.swing.JButton r;
    private javax.swing.JButton s;
    private javax.swing.JTextField searchBar;
    private javax.swing.JLabel searchBarLabel;
    private javax.swing.JButton t;
    private javax.swing.JButton u;
    private javax.swing.JButton v;
    private javax.swing.JButton w;
    private javax.swing.JButton x;
    private javax.swing.JButton y;
    private javax.swing.JButton z;
    // End of variables declaration  
    
    
    public void populateBarcodeDatabase()
        {
        Numeral[] n = {Numeral.one, Numeral.two, Numeral.three, Numeral.four, Numeral.five, Numeral.six, Numeral.seven, Numeral.eight, Numeral.nine};
        for(int i = 1; i < 3; i++) {
            Numeral [] numerals = {n[i-1]};
            Barcode barcode = new Barcode (numerals);
            ProductDatabases.BARCODED_PRODUCT_DATABASE.put(barcode, new BarcodedProduct(barcode, ("itema"+i), new BigDecimal(i*10), i*100));
            
        }
        Numeral [] numerals = {n[4]};
        Barcode barcode = new Barcode (numerals);
        ProductDatabases.BARCODED_PRODUCT_DATABASE.put(barcode, new BarcodedProduct(barcode, ("barcoded a"), new BigDecimal(10), 100));
        }
    
    public void populatePluDatabase()
        {
        Numeral[] n = {Numeral.one, Numeral.two, Numeral.three, Numeral.four, Numeral.five, Numeral.six, Numeral.seven, Numeral.eight, Numeral.nine};
            ProductDatabases.PLU_PRODUCT_DATABASE.put(new PriceLookupCode ("0001"), new PLUCodedProduct(new PriceLookupCode ("0001"), "aa", new BigDecimal(10)));
            ProductDatabases.PLU_PRODUCT_DATABASE.put(new PriceLookupCode ("0002"), new PLUCodedProduct(new PriceLookupCode ("0002"), "ab", new BigDecimal(10)));
            ProductDatabases.PLU_PRODUCT_DATABASE.put(new PriceLookupCode ("0003"), new PLUCodedProduct(new PriceLookupCode ("0003"), "c", new BigDecimal(10)));
            ProductDatabases.PLU_PRODUCT_DATABASE.put(new PriceLookupCode ("0004"), new PLUCodedProduct(new PriceLookupCode ("0004"), "d", new BigDecimal(10)));
        } 
    
    }
